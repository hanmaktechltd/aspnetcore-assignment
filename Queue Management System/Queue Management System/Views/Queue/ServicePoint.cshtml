@model Queue_Management_System.Models.QueueEntry
@{
    // Fetch service providers data from the endpoint
    List<(string ServicePoint, int ServiceTypeId)> serviceProviders = null;

    try
    {
        var client = new System.Net.Http.HttpClient();
        var response = await client.GetAsync("/Queue/GetServiceProviders");

        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            serviceProviders = Newtonsoft.Json.JsonConvert.DeserializeObject<List<(string ServicePoint, int ServiceTypeId)>>(content);
        }
    }
    catch (Exception ex)
    {
        // Handle exceptions if needed
    }
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/Queue_Management_System.styles.css" asp-append-version="true" />
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

    <style>
        .kiosk-button {
            display: inline-block;
            width: 300px;
            height: 100px;
            margin: 10px;
            font-size: 24px;
            text-align: center;
            line-height: 100px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

            .kiosk-button:hover {
                background-color: #0056b3;
            }

        /* Vertical center alignment */
        .vertical-center {
            display: flex;
            flex-direction: column;
            justify-content: center;
            height: 100%;
        }

        /* CSS for the queue table */
        .queue-table {
            width: 100%;
            border-collapse: collapse;
            border: 1px solid #ddd;
        }

            .queue-table th, .queue-table td {
                padding: 8px;
                ddd border: 1px solid #;
                text-align: left;
            }

            .queue-table th {
                background-color: #f2f2f2;
            }

            .queue-table tbody tr:nth-child(even) {
                background-color: #f9f9f9;
            }

            .queue-table tbody tr:hover {
                background-color: #e2e2e2;
                cursor: pointer;
            }

    </style>
</head>
<body>
    <h1>Service Point Operations</h1>

    <div class="row">
        <!-- Column for buttons -->
        <div class="col-md-6">
           

            <div>
                
                <!-- Button for recalling a number -->
                <button type="button" class="kiosk-button" onclick="recallNumber()">Recall Number</button>
            </div>

            

            <div>
                
                <!-- Button for marking a number as finished -->
                <button type="button" class="kiosk-button" onclick="markAsFinished()">Mark as Finished</button>
            </div>

            <div>
                
                <!-- Button for transferring a number -->
                <button type="button" class="kiosk-button" onclick="transferNumber()">Transfer Number</button>
            </div>

            <div>
                
                <!-- Button to view the queue -->
                <button type="button" class="kiosk-button" onclick="redirectToViewQueue()">View Queue</button>

            </div>
        </div>

        <div class="col-md-6">
            <div class="current-number vertical-center">
                <h2>Ticket Details</h2>
                @if (Model != null)
                {
                    
                    <div id="ticketDetailsContainer">
                        <!-- Partial view content will be loaded here -->
                        @await Html.PartialAsync("_TicketDetailsPartial", Model)
                    </div>
                }
                else
                {
                    <p>No ticket details available.</p>
                }
                <br/><br/>
                <div id="transferNumberContainer">
                    <h2>Transfer Number</h2>
                    @if (serviceProviders != null && serviceProviders.Count > 0)
                    {
                        @await Html.PartialAsync("_TransferNumberPartial", serviceProviders)
                    }

                </div>
            </div>
        </div>

       
    </div>



    <!-- Add this code within your existing HTML -->
    <div class="modal fade" id="transferDialog" tabindex="-1" role="dialog" aria-labelledby="transferDialogLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="transferDialogLabel">Transfer Ticket</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="transferForm">
                        <div class="form-group">
                            <label for="servicePointDropdown">Select Service Point</label>
                            <select class="form-control" id="servicePointDropdown" name="servicePoint">
                                <!-- Populate this dropdown with options dynamically -->
                                <!-- Example: -->
                                <option value="servicePoint1">Service Point 1</option>
                                <option value="servicePoint2">Service Point 2</option>
                                <!-- Add more options based on your service points -->
                            </select>
                        </div>
                        <input type="hidden" id="ticketNumber" name="ticketNumber" value="@Model?.TicketNumber" />
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" onclick="submitTransferForm()">Transfer</button>
                </div>
            </div>
        </div>
    </div>


    <script>
       

        function recallNumber() {
            var ticketNumber = "@Model?.TicketNumber";

            $.ajax({
                type: "POST",
                url: "/Queue/UpdateRecallCount",
                data: { ticketNumber: ticketNumber },
                success: function (data) {
                    $('#ticketDetailsContainer').html(data);
                },
                error: function () {
                    // Handle error if needed
                }
            });
        }




        function markAsFinished() {
            // Retrieve the ticket number from the Model on the page
            var ticketNumber = "@Model?.TicketNumber";

            // Make an AJAX POST request to mark the ticket as finished
            $.ajax({
                type: "POST",
                url: "/Queue/MarkFinished",
                data: { ticketNumber: ticketNumber }, // Send the ticket number as data
                success: function (data) {
                    // Update ticket details section with the received partial view
                    $('#ticketDetailsContainer').html(data);
                },
                error: function () {
                    // Handle error if needed
                }
            });
        }

        function transferNumber() {
            $.ajax({
                type: "GET",
                url: "/Queue/GetServiceProviders",
                success: function (data) {
                    // Update the container with the received partial view
                    $('#ticketDetailsContainer').html(data);

                    // Populate the dropdown with service providers
                    populateServicePointDropdown(data);

                    // Show the transfer dialog
                    $('#transferDialog').modal('show');
                },
                error: function () {
                    // Handle error if needed
                }
            });
        }

        function populateServicePointDropdown(data) {
            var dropdown = $('#servicePointDropdown');
            dropdown.empty(); // Clear existing options

            if (data && data.length > 0) {
                $.each(data, function (index, item) {
                    dropdown.append($('<option></option>').attr('value', item.ServiceTypeId).text(item.ServicePoint));
                });
            } else {
                dropdown.append($('<option></option>').text('No service providers found'));
            }
        }


        // JavaScript code
        function submitTransferForm() {
            var formData = $('#transferForm').serialize(); // Serialize form data

            $.ajax({
                type: "POST",
                url: "/Queue/TransferTicketToService",
                data: formData,
                success: function (data) {
                    // Handle success, e.g., close the modal
                    $('#transferDialog').modal('hide');
                    // Perform any other actions upon successful transfer
                },
                error: function () {
                    // Handle error if needed
                }
            });
        }

     
        function redirectToViewQueue() {
            window.location.href = '/Queue/ViewQueue';
        }

    
        
    </script>
</body>
</html>
